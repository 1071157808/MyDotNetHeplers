一：监视锁
限定线程个数的一把锁 ：Monitor
Enter 锁住某一个资源（一般是一个静态的变量）
Exit  退出某一个资源
给一个什么感觉：为了严谨性，是不是为了加锁区域我都有try  catch  finally..而且还要用
if来判断。。太麻烦，用一个语法糖lock
                lock (lockMe)
                {
                    Console.WriteLine(nums++);
                }
凡是简化我们编程的方式，基本上都叫语法糖
语法糖


二：lock/Monitor的内部机制
因为众多的锁机制中，唯独只有Monitor有专用的语法糖。。。。所以说非常受重视。。。
本质就是利用堆上的同步块实现资源锁定。。。
总结：
1. Enter中添加的对象，相当于把对象的同步块索引和CLR的同步块数组了关联。
   Exit中释放的资源，相当于把对象的同步快索引和CLR的同步块数组进行了解绑。
注意事项：
1. 你锁住的资源一定要让你的可访问的线程必须能够访问到
   所以锁住的资源千万不要使用值类型

同步块索引默认是-1
lock命令或者是monitor命令，就是将同步块索引放到同步块数组（这个是CLR中的数组）中，并改变同步块索引为1

程序会先检查同步块索引是不是-1，如果不是-1，说明这个对象正在被占用


